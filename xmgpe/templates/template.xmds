<simulation xmds-version="2">
    <name>{{conf.name}}</name>

    <author>CM</author>

    <description></description>

    <features>
        <!-- <halt_non_finite/> -->
        <auto_vectorise/>
        <benchmark/>
        <bing/>
        <fftw plan="measure"/>
        <openmp threads="8"/>
        <globals>
            <![CDATA[
        	{% for key, value in conf.globals.items() %}
            const real {{key}} = {{value}};
            {% endfor %}
        	]]>
        </globals>
    </features>

    <geometry>
        <propagation_dimension>t</propagation_dimension>
        <transverse_dimensions>
            {% for dim in conf.geometry %}
            <dimension name="{{dim.name}}" domain="{{dim.domain}}" lattice="{{dim.lattice}}"/>
            {% endfor %}
        </transverse_dimensions>
    </geometry>

    <vector name="wavefunction" dimensions="{{conf.dimensions}}" type="complex">
        <components>psi</components>
        <initialisation>
            <![CDATA[psi = {{conf.gaussian_wavefunction}};]]>
        </initialisation>
        <!-- <initialisation kind="hdf5"> <filename>data.h5</filename> </initialisation> -->
    </vector>

    <vector name="potential" dimensions="{{conf.dimensions}}" type="real">
        <components>V1</components>
        <initialisation>
            <![CDATA[V1 = {{conf.harmonic_potential}};]]>
        </initialisation>

    </vector>

    <computed_vector name="normalization" dimensions="" type="real">
        <components>
            Norm
        </components>
        <evaluation>
            <dependencies>wavefunction</dependencies>
            <![CDATA[Norm = mod2(psi);]]>
        </evaluation>

    </computed_vector>

    <sequence>
        <integrate algorithm="ARK45" interval="{{conf.integrate_interval}}" steps="{{conf.integrate_steps}}" tolerance="1e-06">
            <samples>100</samples>
            <filters where="step end">
                <filter>
                    <dependencies>wavefunction normalization</dependencies>
                    <![CDATA[psi *= sqrt(N/Norm);]]>
                </filter>
            </filters>
            <operators>
                {% for dim in conf.geometry %}
                <operator kind="ip">
                    <operator_names>T{{dim.name}}</operator_names>
                    <![CDATA[T{{dim.name}} = -0.5*k{{dim.name}}*k{{dim.name}};]]>
                </operator>
                {% endfor %}
                <integration_vectors>wavefunction</integration_vectors>
                <dependencies>potential</dependencies>
                <![CDATA[
                         {{conf.gpe}}
                         ]]>
            </operators>
        </integrate>
        <breakpoint filename="{{conf.name}}_final" format="hdf5">
            <dependencies basis="{{conf.dimensions}}">wavefunction</dependencies>
        </breakpoint>
    </sequence>

    <output filename="{{conf.name}}_results">
        <sampling_group basis="{{conf.dimensions}}" initial_sample="yes">
            <moments>psiR psiI</moments>
            <dependencies>wavefunction</dependencies>
            <![CDATA[_SAMPLE_COMPLEX(psi);]]>
        </sampling_group>
    </output>

</simulation>
